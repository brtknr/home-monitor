version: '3.3'    
services:
  poll-bme280:
    build:
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./config.py:/config.py
    command:
      - poll-bme280.py
    restart: always
  poll-octopus:
    build:
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./config.py:/config.py
    command:
      - poll-octopus.py
    restart: always
  poll-internet:
    build:
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./config.py:/config.py
    command:
      - poll-internet.py
    restart: always
  patch-cloudflare:
    build:
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./config.py:/config.py
    command:
      - patch-cloudflare.py
    restart: always
  flask-server:
    build:
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./config.py:/config.py
    environment:
      - FLASK_APP=./flask-server.py
    entrypoint:
      - flask
    command:
      - run
      - --host=0.0.0.0
    ports:
      - 5000:5000
    restart: always
  grafana:
    image: grafana/grafana
    ports:
      - 30000:3000
    restart: always
  nginx:
    image: nginx:1.21-alpine
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot:arm64v8-latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
